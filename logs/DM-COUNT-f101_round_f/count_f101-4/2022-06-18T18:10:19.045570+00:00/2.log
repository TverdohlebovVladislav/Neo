[2022-06-18 18:15:36,117] {taskinstance.py:1032} INFO - Dependencies all met for <TaskInstance: DM-COUNT-f101_round_f.count_f101-4 manual__2022-06-18T18:10:19.045570+00:00 [queued]>
[2022-06-18 18:15:36,157] {taskinstance.py:1032} INFO - Dependencies all met for <TaskInstance: DM-COUNT-f101_round_f.count_f101-4 manual__2022-06-18T18:10:19.045570+00:00 [queued]>
[2022-06-18 18:15:36,170] {taskinstance.py:1238} INFO - 
--------------------------------------------------------------------------------
[2022-06-18 18:15:36,171] {taskinstance.py:1239} INFO - Starting attempt 2 of 2
[2022-06-18 18:15:36,171] {taskinstance.py:1240} INFO - 
--------------------------------------------------------------------------------
[2022-06-18 18:15:36,194] {taskinstance.py:1259} INFO - Executing <Task(PostgresOperator): count_f101-4> on 2022-06-18 18:10:19.045570+00:00
[2022-06-18 18:15:36,219] {standard_task_runner.py:52} INFO - Started process 486 to run task
[2022-06-18 18:15:36,235] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'DM-COUNT-f101_round_f', 'count_f101-4', 'manual__2022-06-18T18:10:19.045570+00:00', '--job-id', '294', '--raw', '--subdir', 'DAGS_FOLDER/f_101_round_f.py', '--cfg-path', '/tmp/tmpsd9tm5tb', '--error-file', '/tmp/tmptvvlvs0c']
[2022-06-18 18:15:36,236] {standard_task_runner.py:77} INFO - Job 294: Subtask count_f101-4
[2022-06-18 18:15:36,284] {logging_mixin.py:109} INFO - Running <TaskInstance: DM-COUNT-f101_round_f.count_f101-4 manual__2022-06-18T18:10:19.045570+00:00 [running]> on host 77c632902f61
[2022-06-18 18:15:36,477] {taskinstance.py:1426} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=DM-COUNT-f101_round_f
AIRFLOW_CTX_TASK_ID=count_f101-4
AIRFLOW_CTX_EXECUTION_DATE=2022-06-18T18:10:19.045570+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2022-06-18T18:10:19.045570+00:00
[2022-06-18 18:15:36,490] {base.py:79} INFO - Using connection to: id: postgres. Host: postgres, Port: 5432, Schema: postgres, Login: ***, Password: ***, extra: {}
[2022-06-18 18:15:36,494] {dbapi.py:225} INFO - Running statement: CALL dm.fill_f101_round_f (%(date)s::date);, parameters: {'date': '2018-01-4'}
[2022-06-18 18:15:36,504] {taskinstance.py:1700} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1329, in _run_raw_task
    self._execute_task_with_callbacks(context)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1455, in _execute_task_with_callbacks
    result = self._execute_task(context, self.task)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1511, in _execute_task
    result = execute_callable(context=context)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/postgres/operators/postgres.py", line 69, in execute
    self.hook.run(self.sql, self.autocommit, parameters=self.parameters)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/hooks/dbapi.py", line 205, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/hooks/dbapi.py", line 227, in _run_command
    cur.execute(sql_statement, parameters)
psycopg2.errors.UndefinedColumn: column "balance_in_rub" does not exist
LINE 82:             then BALANCE_IN_RUB - TURN_CRE_RUB + TURN_DEB_RU...
                          ^
HINT:  There is a column named "balance_in_rub" in table "dm_f101_round_f", but it cannot be referenced from this part of the query.
QUERY:  insert 
      into dm.dm_f101_round_f
           ( from_date         
           , to_date           
           , chapter           
           , ledger_account    
           , characteristic    
           , balance_in_rub    
           , balance_in_val    
           , balance_in_total  
           , turn_deb_rub      
           , turn_deb_val      
           , turn_deb_total    
           , turn_cre_rub      
           , turn_cre_val      
           , turn_cre_total    
           , balance_out_rub  
           , balance_out_val   
           , balance_out_total 
           )
    select  date_trunc('month', i_OnDate)        as from_date,
           (date_trunc('MONTH', i_OnDate) + INTERVAL '1 MONTH - 1 day')  as to_date,
           s.chapter                             as chapter,
           substr(acc_d.account_number, 1, 5)    as ledger_account,
           acc_d.char_type                       as characteristic,
           -- RUB balance
           sum( case 
                  when cur.currency_code in ('643', '810')
                  then b.balance_out
                  else 0
                 end
              )                                  as balance_in_rub,
          -- VAL balance converted to rub
          sum( case 
                 when cur.currency_code not in ('643', '810')
                 then b.balance_out * exch_r.reduced_cource
                 else 0
                end
             )                                   as balance_in_val,
          -- Total: RUB balance + VAL converted to rub
          sum(  case 
                 when cur.currency_code in ('643', '810')
                 then b.balance_out
                 else b.balance_out * exch_r.reduced_cource
               end
             )                                   as balance_in_total  ,
           -- RUB debet turnover
           sum(case 
                 when cur.currency_code in ('643', '810')
                 then at.debet_amount_rub
                 else 0
               end
           )                                     as turn_deb_rub,
           -- VAL debet turnover converted
           sum(case 
                 when cur.currency_code not in ('643', '810')
                 then at.debet_amount_rub
                 else 0
               end
           )                                     as turn_deb_val,
           -- SUM = RUB debet turnover + VAL debet turnover converted
           sum(at.debet_amount_rub)              as turn_deb_total,
           -- RUB credit turnover
           sum(case 
                 when cur.currency_code in ('643', '810')
                 then at.credit_amount_rub
                 else 0
               end
              )                                  as turn_cre_rub,
           -- VAL credit turnover converted
           sum(case 
                 when cur.currency_code not in ('643', '810')
                 then at.credit_amount_rub
                 else 0
               end
              )                                  as turn_cre_val,
           -- SUM = RUB credit turnover + VAL credit turnover converted
           sum(at.credit_amount_rub)             as turn_cre_total,
           
          CASE
            WHEN CHARACTERISTIC = 'A' and cur.currency_code in ('643', '810') 
            then BALANCE_IN_RUB - TURN_CRE_RUB + TURN_DEB_RUB
            WHEN CHARACTERISTIC = 'P' and cur.currency_code in ('643', '810') 
            then BALANCE_IN_RUB + TURN_CRE_RUB - TURN_DEB_RUB
            else 0
          END as balance_out_rub,

          CASE
            WHEN CHARACTERISTIC = 'A' and cur.currency_code not in ('643', '810') 
            then BALANCE_IN_VAL - TURN_CRE_VAL + TURN_DEB_VAL
            WHEN CHARACTERISTIC = 'P' and cur.currency_code not in ('643', '810') 
            then BALANCE_IN_VAL + TURN_CRE_VAL - TURN_DEB_VAL
            else 0
          END as balance_out_val,
           
          BALANCE_OUT_VAL + BALANCE_OUT_RUB                 as balance_out_total 
          
      from ds.md_ledger_account_s s
      join ds.md_account_d acc_d
        on substr(acc_d.account_number, 1, 5) = to_char(s.ledger_account, 'FM99999999')
      join ds.md_currency_d cur
        on cur.currency_rk = acc_d.currency_rk
      left 
      join ds.ft_balance_f b
        on b.account_rk = acc_d.account_rk
       and b.on_date  = (date_trunc('month', i_OnDate) - INTERVAL '1 day')
      left 
      join ds.md_exchange_rate_d exch_r
        on exch_r.currency_rk = acc_d.currency_rk
       and i_OnDate between exch_r.data_actual_date and exch_r.data_actual_end_date
      left 
      join dm.dm_account_turnover_f at
        on at.account_rk = acc_d.account_rk
       and at.on_date between date_trunc('month', i_OnDate) and (date_trunc('MONTH', i_OnDate) + INTERVAL '1 MONTH - 1 day')
     where i_OnDate between s.start_date and s.end_date
       and i_OnDate between acc_d.data_actual_date and acc_d.data_actual_end_date
       and i_OnDate between cur.data_actual_date and cur.data_actual_end_date
     group by s.chapter,
           substr(acc_d.account_number, 1, 5),
           acc_d.char_type
CONTEXT:  PL/pgSQL function dm.fill_f101_round_f(date) line 21 at SQL statement

[2022-06-18 18:15:36,520] {taskinstance.py:1277} INFO - Marking task as FAILED. dag_id=DM-COUNT-f101_round_f, task_id=count_f101-4, execution_date=20220618T181019, start_date=20220618T181536, end_date=20220618T181536
[2022-06-18 18:15:36,544] {standard_task_runner.py:92} ERROR - Failed to execute job 294 for task count_f101-4
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/task/task_runner/standard_task_runner.py", line 85, in _start_by_fork
    args.func(args, dag=self.dag)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/cli/cli_parser.py", line 48, in command
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/cli.py", line 92, in wrapper
    return f(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/cli/commands/task_command.py", line 298, in task_run
    _run_task_by_selected_method(args, dag, ti)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/cli/commands/task_command.py", line 107, in _run_task_by_selected_method
    _run_raw_task(args, ti)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/cli/commands/task_command.py", line 184, in _run_raw_task
    error_file=args.error_file,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1329, in _run_raw_task
    self._execute_task_with_callbacks(context)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1455, in _execute_task_with_callbacks
    result = self._execute_task(context, self.task)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1511, in _execute_task
    result = execute_callable(context=context)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/postgres/operators/postgres.py", line 69, in execute
    self.hook.run(self.sql, self.autocommit, parameters=self.parameters)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/hooks/dbapi.py", line 205, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/hooks/dbapi.py", line 227, in _run_command
    cur.execute(sql_statement, parameters)
psycopg2.errors.UndefinedColumn: column "balance_in_rub" does not exist
LINE 82:             then BALANCE_IN_RUB - TURN_CRE_RUB + TURN_DEB_RU...
                          ^
HINT:  There is a column named "balance_in_rub" in table "dm_f101_round_f", but it cannot be referenced from this part of the query.
QUERY:  insert 
      into dm.dm_f101_round_f
           ( from_date         
           , to_date           
           , chapter           
           , ledger_account    
           , characteristic    
           , balance_in_rub    
           , balance_in_val    
           , balance_in_total  
           , turn_deb_rub      
           , turn_deb_val      
           , turn_deb_total    
           , turn_cre_rub      
           , turn_cre_val      
           , turn_cre_total    
           , balance_out_rub  
           , balance_out_val   
           , balance_out_total 
           )
    select  date_trunc('month', i_OnDate)        as from_date,
           (date_trunc('MONTH', i_OnDate) + INTERVAL '1 MONTH - 1 day')  as to_date,
           s.chapter                             as chapter,
           substr(acc_d.account_number, 1, 5)    as ledger_account,
           acc_d.char_type                       as characteristic,
           -- RUB balance
           sum( case 
                  when cur.currency_code in ('643', '810')
                  then b.balance_out
                  else 0
                 end
              )                                  as balance_in_rub,
          -- VAL balance converted to rub
          sum( case 
                 when cur.currency_code not in ('643', '810')
                 then b.balance_out * exch_r.reduced_cource
                 else 0
                end
             )                                   as balance_in_val,
          -- Total: RUB balance + VAL converted to rub
          sum(  case 
                 when cur.currency_code in ('643', '810')
                 then b.balance_out
                 else b.balance_out * exch_r.reduced_cource
               end
             )                                   as balance_in_total  ,
           -- RUB debet turnover
           sum(case 
                 when cur.currency_code in ('643', '810')
                 then at.debet_amount_rub
                 else 0
               end
           )                                     as turn_deb_rub,
           -- VAL debet turnover converted
           sum(case 
                 when cur.currency_code not in ('643', '810')
                 then at.debet_amount_rub
                 else 0
               end
           )                                     as turn_deb_val,
           -- SUM = RUB debet turnover + VAL debet turnover converted
           sum(at.debet_amount_rub)              as turn_deb_total,
           -- RUB credit turnover
           sum(case 
                 when cur.currency_code in ('643', '810')
                 then at.credit_amount_rub
                 else 0
               end
              )                                  as turn_cre_rub,
           -- VAL credit turnover converted
           sum(case 
                 when cur.currency_code not in ('643', '810')
                 then at.credit_amount_rub
                 else 0
               end
              )                                  as turn_cre_val,
           -- SUM = RUB credit turnover + VAL credit turnover converted
           sum(at.credit_amount_rub)             as turn_cre_total,
           
          CASE
            WHEN CHARACTERISTIC = 'A' and cur.currency_code in ('643', '810') 
            then BALANCE_IN_RUB - TURN_CRE_RUB + TURN_DEB_RUB
            WHEN CHARACTERISTIC = 'P' and cur.currency_code in ('643', '810') 
            then BALANCE_IN_RUB + TURN_CRE_RUB - TURN_DEB_RUB
            else 0
          END as balance_out_rub,

          CASE
            WHEN CHARACTERISTIC = 'A' and cur.currency_code not in ('643', '810') 
            then BALANCE_IN_VAL - TURN_CRE_VAL + TURN_DEB_VAL
            WHEN CHARACTERISTIC = 'P' and cur.currency_code not in ('643', '810') 
            then BALANCE_IN_VAL + TURN_CRE_VAL - TURN_DEB_VAL
            else 0
          END as balance_out_val,
           
          BALANCE_OUT_VAL + BALANCE_OUT_RUB                 as balance_out_total 
          
      from ds.md_ledger_account_s s
      join ds.md_account_d acc_d
        on substr(acc_d.account_number, 1, 5) = to_char(s.ledger_account, 'FM99999999')
      join ds.md_currency_d cur
        on cur.currency_rk = acc_d.currency_rk
      left 
      join ds.ft_balance_f b
        on b.account_rk = acc_d.account_rk
       and b.on_date  = (date_trunc('month', i_OnDate) - INTERVAL '1 day')
      left 
      join ds.md_exchange_rate_d exch_r
        on exch_r.currency_rk = acc_d.currency_rk
       and i_OnDate between exch_r.data_actual_date and exch_r.data_actual_end_date
      left 
      join dm.dm_account_turnover_f at
        on at.account_rk = acc_d.account_rk
       and at.on_date between date_trunc('month', i_OnDate) and (date_trunc('MONTH', i_OnDate) + INTERVAL '1 MONTH - 1 day')
     where i_OnDate between s.start_date and s.end_date
       and i_OnDate between acc_d.data_actual_date and acc_d.data_actual_end_date
       and i_OnDate between cur.data_actual_date and cur.data_actual_end_date
     group by s.chapter,
           substr(acc_d.account_number, 1, 5),
           acc_d.char_type
CONTEXT:  PL/pgSQL function dm.fill_f101_round_f(date) line 21 at SQL statement

[2022-06-18 18:15:36,581] {local_task_job.py:154} INFO - Task exited with return code 1
[2022-06-18 18:15:36,702] {local_task_job.py:264} INFO - 0 downstream tasks scheduled from follow-on schedule check
